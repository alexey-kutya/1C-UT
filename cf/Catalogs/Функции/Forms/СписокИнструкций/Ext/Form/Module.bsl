
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Функции.Ссылка КАК Функция,
		|	Файлы.Ссылка КАК Инструкция
		|ИЗ
		|	Справочник.Функции КАК Функции
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
		|		ПО (Файлы.Владелец = Функции.Ссылка)
		|			И (Файлы.ТипФайла = ЗНАЧЕНИЕ(Перечисление.ТипыФайлов.ИнструкцияПользователя))
		|ГДЕ
		|	Функции.Владелец = &Конфигурация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Функция ИЕРАРХИЯ";
	Запрос.УстановитьПараметр("Конфигурация", Пользователи.ТекущийПользователь().ОсновнаяКонфигурация);
	РезультатЗапроса = Запрос.Выполнить();
	
	ДеревоИнструкций = РеквизитФормыВЗначение("Инструкции");
	ДеревоИнструкций = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(ДеревоИнструкций, "Инструкции");

КонецПроцедуры

&НаКлиенте
Процедура ИнструкцииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ Поле.Имя = "ИнструкцииИнструкция" Тогда
		Возврат;
	КонецЕсли; 
	
	СтандартнаяОбработка = Ложь;
	
	Файл = Элементы.Инструкции.ТекущиеДанные.Инструкция;
	ИмяФайла = ТИ.ПолучитьПолноеОписаниеФайла(Файл);
	
	Адрес = ПолучитьФайлНаСервере(Файл, УникальныйИдентификатор);
	
	ПолучитьФайл(Адрес, ИмяФайла);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьФайлНаСервере(Файл, УникальныйИдентификатор)

	Возврат ПоместитьВоВременноеХранилище(Файл.ХранилищеФайла.Получить(), УникальныйИдентификатор);

КонецФункции // ПолучитьФайлНаСервере()




&НаСервере
Процедура ПередЗаписьюНаСервере1(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбщегоНазначенияСППР.ПоместитьФорматированноеОписаниеВХранилище(Описание, ТекущийОбъект.ХранилищеОписания);
	ОбщегоНазначенияСППР.ПоместитьФорматированноеОписаниеВХранилище(Заметки, ТекущийОбъект.ХранилищеИнструкции);
	ТекущийОбъект.Описание = Описание.ПолучитьТекст();
	ТекущийОбъект.Инструкция = Заметки.ПолучитьТекст();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбщегоНазначенияСППР.ПоместитьФорматированноеОписаниеВХранилище(Описание, ТекущийОбъект.ХранилищеОписания);
	ОбщегоНазначенияСППР.ПоместитьФорматированноеОписаниеВХранилище(Заметки, ТекущийОбъект.ХранилищеЗаметок);
	ТекущийОбъект.Описание = Описание.ПолучитьТекст();
	ТекущийОбъект.Заметки = Заметки.ПолучитьТекст();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	РедактируемыйОбъект = РеквизитФормыВЗначение("Объект");
	
	ОбщегоНазначенияСППР.УстановитьФорматированноеОписаниеИзХранилища(Описание, РедактируемыйОбъект.ХранилищеОписания);
	ОбщегоНазначенияСППР.УстановитьФорматированноеОписаниеИзХранилища(Заметки, РедактируемыйОбъект.ХранилищеЗаметок);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Ответственный = ТИ.ТекущийПользователь();
	КонецЕсли;
	
	ФайлТехническогоОписания = ТИ.ПолучитьФайлФункцииНаСервере(Объект.Владелец, ПредопределенноеЗначение("Перечисление.ТипыФайлов.ТехническоеОписание"));
	ФайлИнструкцииПользователя = ТИ.ПолучитьФайлФункцииНаСервере(Объект.Владелец, ПредопределенноеЗначение("Перечисление.ТипыФайлов.ИнструкцияПользователя"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияОписанияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Файл = ТИ.ПолучитьФайлФункцииНаСервере(Объект.Владелец, ПредопределенноеЗначение("Перечисление.ТипыФайлов.ТехническоеОписание"));
	Если Файл = Неопределено Тогда
		Сообщить("Не найден файл "+ПредопределенноеЗначение("Перечисление.ТипыФайлов.ТехническоеОписание"));
		Возврат;
	КонецЕсли;  
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Файл", Файл);
	ОповещениеОВыборе = Новый ОписаниеОповещения("ОбработкаВыбораВерсии", ЭтаФорма, ПредопределенноеЗначение("Перечисление.ТипыФайлов.ТехническоеОписание"));
	ОткрытьФорму("Справочник.ВерсииФайлов.Форма.ФормаВыбора", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,ОповещениеОВыборе);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораВерсии(Знач Результат, Знач ПараметрКоманды) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли; 
	
	Если ПараметрКоманды = ПредопределенноеЗначение("Перечисление.ТипыФайлов.ТехническоеОписание") Тогда
		Объект.ВерсияОписания = Результат;
	ИначеЕсли  ПараметрКоманды = ПредопределенноеЗначение("Перечисление.ТипыФайлов.ИнструкцияПользователя") Тогда
		Объект.ВерсияИнструкции = Результат;
	КонецЕсли; 

КонецПроцедуры // ОбработкаВыбораВерсии()

&НаКлиенте
Процедура ВерсияИнструкцииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Файл = ТИ.ПолучитьФайлФункцииНаСервере(Объект.Владелец, ПредопределенноеЗначение("Перечисление.ТипыФайлов.ИнструкцияПользователя"));
	Если Файл = Неопределено Тогда
		Сообщить("Не найден файл "+ПредопределенноеЗначение("Перечисление.ТипыФайлов.ИнструкцияПользователя"));
		Возврат;
	КонецЕсли;  
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Файл", Файл);
	ОповещениеОВыборе = Новый ОписаниеОповещения("ОбработкаВыбораВерсии", ЭтаФорма, ПредопределенноеЗначение("Перечисление.ТипыФайлов.ИнструкцияПользователя"));
	ОткрытьФорму("Справочник.ВерсииФайлов.Форма.ФормаВыбора", ПараметрыФормы,ЭтаФорма,УникальныйИдентификатор,,,ОповещениеОВыборе);
	
КонецПроцедуры

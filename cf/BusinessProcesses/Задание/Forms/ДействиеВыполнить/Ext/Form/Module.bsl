
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Для нового объекта выполняем код инициализации формы в ПриСозданииНаСервере.
	// Для существующего - в ПриЧтенииНаСервере.
	Если Объект.Ссылка.Пустая() Тогда
		ИнициализацияФормы();
	КонецЕсли;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.ИзменениеКонфигурации") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетыОТестировании.Имя,
		|	ОтчетыОТестировании.ХранимыйФайл
		|ИЗ
		|	РегистрСведений.ОтчетыОТестировании КАК ОтчетыОТестировании
		|ГДЕ
		|	ОтчетыОТестировании.Задача = &Задача";
		
		Запрос.УстановитьПараметр("Задача", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			ВыборкаДетальныеЗаписи.Следующий();
			ИмяФайла = ВыборкаДетальныеЗаписи.Имя;
			АдресФайла = ПоместитьВоВременноеХранилище(ВыборкаДетальныеЗаписи.ХранимыйФайл.Получить(), ЭтаФорма.УникальныйИдентификатор);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	БизнесПроцессыИЗадачиКлиент.ОбновитьДоступностьКомандПринятияКИсполнению(ЭтотОбъект);
	
	Если Объект.Исполнитель <> ТекущийПользователь И НЕ Объект.Выполнена И НЕ ТИ.ДоступнаРоль("ПолныеПрава") Тогда
		ЭтаФорма.Доступность = Ложь;
		ПоказатьПредупреждение(,"Форма открыта в режиме просмотра. Вы не являетесь исполнителем по данной задаче. При необходимости выполнить действия по данной задаче вы можете сделать перенаправление задачи на себя или другого сотрудника.");
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ВыполнитьЗадачу = Ложь;
	Если НЕ (ПараметрыЗаписи.Свойство("ВыполнитьЗадачу", ВыполнитьЗадачу) И ВыполнитьЗадачу) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗаданиеВыполнено И НЕ ЗначениеЗаполнено(ТекущийОбъект.РезультатВыполнения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Укажите причину, по которой задача отклоняется.'"),,
			"Объект.РезультатВыполнения",,
			Отказ);
		Возврат;
	КонецЕсли;
	
	// запись объекта бизнес-процесса
	ЗаписатьРеквизитыБизнесПроцесса(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	БизнесПроцессыИЗадачиКлиент.ФормаЗадачиОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	Если ИмяСобытия = "Запись_Задание" Тогда
		Если (Источник = Объект.БизнесПроцесс ИЛИ (ТипЗнч(Источник) = Тип("Массив") 
			И Источник.Найти(Объект.БизнесПроцесс) <> Неопределено)) Тогда
			Прочитать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализацияФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СрокНачалаИсполненияПриИзменении(Элемент)
	
	Если Объект.ДатаНачала = НачалоДня(Объект.ДатаНачала) Тогда
		Объект.ДатаНачала = КонецДня(Объект.ДатаНачала);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаИсполненияПриИзменении(Элемент)
	
	Если Объект.ДатаИсполнения = НачалоДня(Объект.ДатаИсполнения) Тогда
		Объект.ДатаИсполнения = КонецДня(Объект.ДатаИсполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Объект.Предмет);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполненоВыполнить(Команда)
	
//	КутьяАА
	Отказ = Ложь;
	Если ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.ИзменениеКонфигурации") 
		И ПустаяСтрока(АдресФайла) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не загружен отчет о тестировании.'"),,
			"ТекущийОтчет",,
			Отказ);
		Возврат;
	КонецЕсли; 
	
	ТекстСообщения = ТИ.ЗначениеЗаполненоНаСервере(Объект.Ссылка);
	Если НЕ ТекстСообщения = "" Тогда
		ПоказатьПредупреждение(,ТекстСообщения);
		Возврат;
	КонецЕсли;
//	КутьяАА	
	
	ЗаданиеВыполнено = Истина;
	Записана = БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтотОбъект, Истина);
	
//	КутьяАА
	Если Записана Тогда
		Если ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.Обращение") Тогда
			Если ТИ.ПолучитьРеквизитПоСсылке(Объект.БизнесПроцесс, "НаПроверке") Тогда
				ТИ.ВыполнитьДействияПриПередачеНаТестирование(Объект.Ссылка);
			Иначе                
				//	MOD безсогласования
				ТИ.ВыполнитьДействияПриУспешномСогласовании(Объект.Ссылка);
			КонецЕсли; 
		ИначеЕсли ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.ИзменениеКонфигурации") Тогда
		
			ТИ.ИзменитьСтатусИзмененияКонфигурации(2, ТИ.ПолучитьРеквизитПоСсылке(Объект.Ссылка, "Предмет"));
			
			СообщениеСтруктура = ТИ.СформироватьЗаголовокИТекстСообщения(Объект.Ссылка, 
			ПредопределенноеЗначение("Справочник.ШаблоныСообщений.СогласованиеИзменения"), Объект.РезультатВыполнения,,Объект.Автор, Объект.Исполнитель);
			
			ПараметрыОтправки = ПодготовитьПараметрыОтправки();
			
			ТИ.СоздатьСообщение(Объект.Предмет, СообщениеСтруктура, ПараметрыОтправки.Отправитель, 
								ПараметрыОтправки.АдресПолучателя, ПараметрыОтправки.Копия);
			
			ТИ.ЗаписатьФайлОтчетаОТестированииВИнформационнуюБазу(Объект.Ссылка, АдресФайла,,ИмяФайла,"Файл", Истина);
		
		КонецЕсли; 
	КонецЕсли; 
//	КутьяАА	
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьПараметрыОтправки()

	ПараметрыОтправки = Новый Структура;
	
	ПараметрыОтправки.Вставить("Отправитель", Объект.Исполнитель.ФизЛицо);
	
	ПараметрыОтправки.Вставить("АдресПолучателя", Объект.Автор.ФизЛицо.АдресЭлектроннойПочты);
	
	Копия = Новый Массив;
	Если ЗначениеЗаполнено(Объект.РезультатВыполнения) Тогда
		Копия.Добавить(Константы.АдминистраторСистемы.Получить().АдресЭлектроннойПочты);
	КонецЕсли;
	
	Если Объект.Предмет.ДокументОснование.Инициатор <> Объект.Предмет.Заказчик Тогда
		Копия.Добавить(Объект.Предмет.ДокументОснование.Инициатор.ФизЛицо.АдресЭлектроннойПочты);
	КонецЕсли; 
	ПараметрыОтправки.Вставить("Копия", Копия);
	
	Возврат ПараметрыОтправки;

КонецФункции // ()
 

&НаКлиенте
Процедура Отменено(Команда)
	
	Отказ = Ложь;
	Если ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.ИзменениеКонфигурации") 
		И ПустаяСтрока(АдресФайла) И НЕ ТИ.ДоступнаРоль("ПолныеПрава") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не загружен отчет о тестировании.'"),,
			"ТекущийОтчет",,
			Отказ);
		Возврат;
	КонецЕсли; 
	
	ЗаданиеВыполнено = Ложь;
	Записана = БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтотОбъект, Истина);
	
//	КутьяАА
	Если Записана Тогда
		Если (ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.Обращение")) Тогда
			ТИ.ВыполнитьДействияПриОтменеОбращения(Объект.Ссылка);
		ИначеЕсли (ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.ИзменениеКонфигурации")) Тогда
			ТИ.ИзменитьСтатусИзмененияКонфигурации(3, ТИ.ПолучитьРеквизитПоСсылке(Объект.Ссылка, "Предмет"));
			
			СообщениеСтруктура = ТИ.СформироватьЗаголовокИТекстСообщения(Объект.Ссылка, 
			ПредопределенноеЗначение("Справочник.ШаблоныСообщений.ОтклонениеИзменения"), Объект.РезультатВыполнения,,Объект.Автор, Объект.Исполнитель);
			
			ПараметрыОтправки = ПодготовитьПараметрыОтправки();
			
			ТИ.СоздатьСообщение(Объект.Предмет, СообщениеСтруктура, ПараметрыОтправки.Отправитель, 
								ПараметрыОтправки.АдресПолучателя, ПараметрыОтправки.Копия);
			
			ТИ.ЗаписатьФайлОтчетаОТестированииВИнформационнуюБазу(Объект.Ссылка, АдресФайла,,ИмяФайла,"Файл", Ложь);
			
		КонецЕсли; 
	КонецЕсли; 
//	КутьяАА	
	
КонецПроцедуры

&НаКлиенте
Процедура Дополнительно(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ОткрытьДопИнформациюОЗадаче(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьКИсполнению(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ПринятьЗадачуКИсполнению(ЭтотОбъект, ТекущийПользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПринятиеКИсполнению(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ОтменитьПринятиеЗадачиКИсполнению(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗадание(Команда)
	
	Записать();
	ПоказатьЗначение(,Объект.БизнесПроцесс);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияФормы()
	
	НачальныйПризнакВыполнения = Объект.Выполнена;
	ПрочитатьРеквизитыБизнесПроцесса();	
	УстановитьСостояниеЭлементов();
	            
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Элементы.СрокНачалаИсполненияВремя.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	Элементы.ДатаИсполненияВремя.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.СрокИсполнения);
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.Дата);
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(ЭтотОбъект, Объект, 
		Элементы.ГруппаСостояние, Элементы.ДатаИсполнения);
	Элементы.ОписаниеРезультата.ТолькоПросмотр = Объект.Выполнена;
	
	Элементы.ИзменитьЗадание.Видимость = (Объект.Автор = Пользователи.ТекущийПользователь());
	
	Если ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.ИзменениеКонфигурации") Тогда
		
		Элементы.Выполнено.Заголовок = "Согласовано";
		Элементы.Отклонено.Заголовок = "Не согласовано";
		
		ТекущийОтчет = ?(ИмяФайла = "", "не загружен", ИмяФайла);

	Иначе
		
		Элементы.ГруппаОтчетыОТестировании.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ПрочитатьРеквизитыБизнесПроцесса()
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	
	УстановитьПривилегированныйРежим(Истина);
	ЗаданиеОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ЗаданиеВыполнено = ЗаданиеОбъект.Выполнено;
	ЗаданиеРезультатВыполнения = ЗаданиеОбъект.РезультатВыполнения;
	ЗаданиеСодержание = ЗаданиеОбъект.Содержание;
	
КонецПроцедуры	

&НаСервере
Процедура ЗаписатьРеквизитыБизнесПроцесса(ЗадачаОбъект)
	
	УстановитьПривилегированныйРежим(Истина);
	ЗаданиеОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(ЗаданиеОбъект.Ссылка);
	ЗаданиеОбъект.Выполнено = ЗаданиеВыполнено;
	ЗаданиеОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеЭлементов()
	
	БизнесПроцессы.Задание.УстановитьСостояниеЭлементовФормыЗадачи(ЭтотОбъект);
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗагрузитьОтчет(Команда)
	
	#Если НЕ ВебКлиент Тогда
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Диалог.Заголовок = "Выберите файл подписанного отчета о тестировании";
		Диалог.ПолноеИмяФайла = "";
		Диалог.ПредварительныйПросмотр = Истина;
		Диалог.Фильтр = "Документ PDF (*.pdf)|*.pdf|";
		
		Если Диалог.Выбрать() Тогда
			ПомещаемыеФайлы = Новый Массив;
			Описание = Новый ОписаниеПередаваемогоФайла(Диалог.ПолноеИмяФайла, "");
			ПомещаемыеФайлы.Добавить(Описание);
			
			ПомещенныеФайлы = Новый Массив;
			
			Если ПоместитьФайлы(ПомещаемыеФайлы, ПомещенныеФайлы, , Ложь, ЭтаФорма.УникальныйИдентификатор) Тогда        
				
				МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПомещенныеФайлы[0].Имя, "\");
				ИмяФайла = МассивПодстрок.Получить(МассивПодстрок.ВГраница());
				АдресФайла = ПомещенныеФайлы[0].Хранение;
				
//				ЗаписатьФайлВИнформационнуюБазу();
				
				ТекущийОтчет = ИмяФайла;
				
			Иначе	
			КонецЕсли;		
			
		Иначе
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	#Иначе
		
		Оповещение = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект);
		НачатьПомещениеФайла(Оповещение,,,Истина, УникальныйИдентификатор);
	#КонецЕсли  		
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат Тогда
		Возврат;
	КонецЕсли;
	
	МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВыбранноеИмяФайла, "\");
	ИмяФайла = МассивПодстрок.Получить(МассивПодстрок.ВГраница());
	Расширение = Прав(ИмяФайла, 3);
	Если НРег(Расширение) = "pdf" Тогда
		АдресФайла = Адрес;
		ТекущийОтчет = ИмяФайла;
	Иначе
		ПоказатьПредупреждение(,"Файл отчета о тестировании должен быть в формате pdf !");
	КонецЕсли; 
	
КонецПроцедуры // ()

//Процедура ЗаписатьФайлВИнформационнуюБазу()
//	
//	УстановитьПривилегированныйРежим(Истина);
//	
//	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
//	
//	МенеджерЗаписи = РегистрыСведений.ОтчетыОТестировании.СоздатьМенеджерЗаписи();
//	МенеджерЗаписи.ТипОтчета = "Файл";
//	МенеджерЗаписи.Задача = Объект.Ссылка;
//	МенеджерЗаписи.ДокументТестирования = Объект.Предмет;
//	МенеджерЗаписи.ХранимыйФайл = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
//	МенеджерЗаписи.Имя = ИмяФайла;
//	МенеджерЗаписи.Записать(Истина);
//	
//КонецПроцедуры

&НаКлиенте
Процедура ОтчетНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(АдресФайла) Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьФайл(АдресФайла, ИмяФайла, Истина);

КонецПроцедуры

&НаКлиенте
Процедура СохранитьОтчет(Команда)
	
	ТИ.ЗаписатьФайлОтчетаОТестированииВИнформационнуюБазу(Объект.Ссылка, АдресФайла,,ИмяФайла,"Файл", Истина);
	
КонецПроцедуры

#КонецОбласти

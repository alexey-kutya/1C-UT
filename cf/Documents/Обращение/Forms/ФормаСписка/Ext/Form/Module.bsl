
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоСотруднику = Справочники.Сотрудники.НайтиПоРеквизиту("ФизЛицо", Пользователи.ТекущийПользователь().ФизЛицо);
	УстановитьОтбор();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор()
	
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ПоСотруднику", ПоСотруднику);
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Ответственный", ПараметрыОтбора["ПоСотруднику"],,, ПараметрыОтбора["ПоСотруднику"] <> Неопределено И Не ПараметрыОтбора["ПоСотруднику"].Пустая());
	
КонецПроцедуры

&НаКлиенте
Процедура ПоСотрудникуПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаОбращений(Команда)
	Состояние(НСтр("ru = 'Загрузка обращений'"),,НСтр("ru = 'Выполняется загрузка обращений. Подождите...'"));
	ТИ.ЗагрузкаИзОТ();
	Элементы.Список.Обновить();
	Состояние(НСтр("ru = 'Обращения загружены'"),,);
КонецПроцедуры

&НаКлиенте
Процедура ПередатьДругомуЗаказчику(Команда)
	
	ПередатьОбращение(Элементы.Список.ТекущаяСтрока, "Проверяющий");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередатьДругомуРазработчику(Команда)
	
	ПередатьОбращение(Элементы.Список.ТекущаяСтрока, "Автор");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередатьОбращение(ДокСсылка, РольПолучателя)

	Категория = ТИ.ЗначениеРеквизитаОбъекта(ДокСсылка, "Категория");
	Если Категория = ПредопределенноеЗначение("Перечисление.КатегорииОбращений.ИзменениеВнешнихОтчётовИОбработок") Тогда
		Ответственный = ТИ.ЗначениеРеквизитаОбъекта(ДокСсылка, "Ответственный");
		ОтветственныйФизЛицо = ТИ.ЗначениеРеквизитаОбъекта(Ответственный, "ФизЛицо");
		ОтветственныйПользователь = ТИ.НайтиПользователяПоРеквизиту("ФизЛицо", ОтветственныйФизЛицо);
		
		Если ОтветственныйПользователь = ТИ.ТекущийПользователь()
			ИЛИ ТИ.ДоступнаРоль("АдминистраторСистемы") Тогда
			ПоказатьВводЗначения(Новый ОписаниеОповещения("ЗавершениеВводаЗначения",ЭтотОбъект,Новый Структура("ДокСсылка, РольПолучателя", ДокСсылка,РольПолучателя)),,"Выберите пользователя", Тип("СправочникСсылка.Пользователи"));
		Иначе
			ПоказатьПредупреждение(,"Вы не можете передавать обращения других разработчиков. При необходимости обратитесь к ответственному разработчику или администратору системы.",,"Отказ");
		КонецЕсли;
	Иначе
		ПоказатьПредупреждение(,"Допускается передавать обращения с категорией 'Изменение внешних отчётов и обработок'",,"Отказ");
	КонецЕсли; 
	
КонецПроцедуры // ПередатьОбращение()

&НаКлиенте
Процедура ЗавершениеВводаЗначения(Пользователь, Параметры) Экспорт

	ИзменитьПользователяБизнесПроцесса(Пользователь, Параметры);
    ОповеститьОбИзменении(Параметры.ДокСсылка);

КонецПроцедуры // ЗавершениеВводаЗначения()
 
&НаСервере
Процедура ИзменитьПользователяБизнесПроцесса(Пользователь, Параметры) 

	Если ЗначениеЗаполнено(Пользователь) Тогда
		БизнесПроцесс = БизнесПроцессы.Задание.НайтиПоРеквизиту("Предмет", Параметры.ДокСсылка);
		
		Если ЗначениеЗаполнено(БизнесПроцесс) Тогда
			Если БизнесПроцесс.Завершен Тогда
				Сообщить("Действие не выполнено! Бизнес-процесс по обращению в статусе Завершен.", СтатусСообщения.ОченьВажное);
			Иначе
				Если БизнесПроцесс[Параметры.РольПолучателя] = Пользователь Тогда
					Сообщить("Действие не выполнено! Новый инициатор не должен совпадать с текущим.", СтатусСообщения.ОченьВажное);
				Иначе
					РольПолучателяДокумент = Новый Структура("Автор, Проверяющий", "Ответственный","Инициатор");
					ТипСправочникаПолучателя = Новый Структура("Автор, Проверяющий", "Сотрудники","КонтактныеЛица");
					
					ПользовательРоли = Справочники[ТипСправочникаПолучателя[Параметры.РольПолучателя]].НайтиПоРеквизиту("ФизЛицо", Пользователь.ФизЛицо);
					Если ЗначениеЗаполнено(ПользовательРоли) Тогда
						
						БизнесПроцессОбъект = БизнесПроцесс.ПолучитьОбъект();
						ТекущийПользовательБизнесПроцесса = БизнесПроцессОбъект[Параметры.РольПолучателя];
						БизнесПроцессОбъект[Параметры.РольПолучателя] = Пользователь;
						Попытка
							БизнесПроцессОбъект.Записать();
							Сообщить("Пользователь в бизнес-процессе успешно изменен.", СтатусСообщения.ОченьВажное);
						Исключение
							Сообщить("Действие не выполнено! Ошибка при записи бизнес-процесса.", СтатусСообщения.ОченьВажное);
							Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
						КонецПопытки;
						
						ДокОбъект = Параметры.ДокСсылка.ПолучитьОбъект();
						ДокОбъект[РольПолучателяДокумент[Параметры.РольПолучателя]] = ПользовательРоли;
						Попытка
							ДокОбъект.Записать();
							Сообщить("Пользователь в документе успешно изменен.", СтатусСообщения.ОченьВажное);
						Исключение
							Сообщить("Ошибка при записи документа! Пользователь в документе не изменен.", СтатусСообщения.ОченьВажное);
							Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
						КонецПопытки;
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	ЗадачаИсполнителяЗадачиПоИсполнителю.Номер
						|ИЗ
						|	Задача.ЗадачаИсполнителя.ЗадачиПоИсполнителю(
						|			&Исполнитель,
						|			БизнесПроцесс = &БизнесПроцесс
						|				И НЕ Выполнена) КАК ЗадачаИсполнителяЗадачиПоИсполнителю";
						
						Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс);
						Запрос.УстановитьПараметр("Исполнитель", ТекущийПользовательБизнесПроцесса);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							Сообщить("По обращению имеется невыполненная задача исполнителя "+ВыборкаДетальныеЗаписи.Номер+". "+"При необходимости выполните перенаправление задачи самостоятельно.", СтатусСообщения.Важное);
						КонецЦикла;
						
					Иначе
						Сообщить("Действие не выполнено! Выбранный пользователь не соответствует назначению "+РольПолучателяДокумент[Параметры.РольПолучателя]+" в документе.", СтатусСообщения.ОченьВажное);
						Сообщить("Выбранный пользователь отсутствует в справочнике "+ТипСправочникаПолучателя[Параметры.РольПолучателя], СтатусСообщения.ОченьВажное);
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли; 
		Иначе
			Сообщить("Действие не выполнено! Не удалось найти бизнес-процесс по обращению.", СтатусСообщения.ОченьВажное);
		КонецЕсли; 
	Иначе
		Сообщить("Действие не выполнено! Не выбран новый пользователь.", СтатусСообщения.ОченьВажное);
	КонецЕсли; 

КонецПроцедуры // ЗавершениеВводаЗначения()
 
